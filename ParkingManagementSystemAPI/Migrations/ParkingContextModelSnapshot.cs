// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingManagementSystemAPI.Data;

#nullable disable

namespace ParkingManagementSystemAPI.Migrations
{
    [DbContext(typeof(ParkingContext))]
    partial class ParkingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.ParkingAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.HasIndex("VehicleTypeName");

                    b.ToTable("ParkingAssignments");
                });

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.ParkingSlot", b =>
                {
                    b.Property<int>("SlotNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlotNumber"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.HasKey("SlotNumber");

                    b.ToTable("ParkingSlots");
                });

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.VehicleType", b =>
                {
                    b.Property<string>("VehicleTypeName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompatibleSlotTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleTypeName");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.ParkingAssignment", b =>
                {
                    b.HasOne("ParkingManagementSystemAPI.Models.ParkingSlot", "Slot")
                        .WithMany("ParkingAssignments")
                        .HasForeignKey("SlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkingManagementSystemAPI.Models.VehicleType", null)
                        .WithMany("ParkingAssignments")
                        .HasForeignKey("VehicleTypeName");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.ParkingSlot", b =>
                {
                    b.Navigation("ParkingAssignments");
                });

            modelBuilder.Entity("ParkingManagementSystemAPI.Models.VehicleType", b =>
                {
                    b.Navigation("ParkingAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
